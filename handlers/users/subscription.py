from typing import Union

from aiogram import F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder

from database import Tariff
from database.models import User
from handlers.routers import user_router


@user_router.message(F.text == 'üìä –ü–æ–¥–ø–∏—Å–∫–∞')
async def check_tariff_plan(event: Union[Message, CallbackQuery], state: FSMContext, user: User):
    if isinstance(event, Message):
        answer = event.answer
    else:
        await event.message.delete()
        answer = event.message.answer


    if user.subscription is None:
        markup = InlineKeyboardBuilder()
        markup.button(
            text='üõí –°–ø–∏—Å–æ–∫ —Ç–∞—Ä–∏—Ñ–æ–≤', callback_data='tariff'
        )
        await answer(
            '–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫. –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–µ?',
            reply_markup=markup.as_markup()
        )
    else:
        tariff = await Tariff.find_one(
            Tariff.id == user.subscription
        )
        await answer(
            f'<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏:</>\n\n'
            f'‚îî –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞: {tariff.name}\n'
            f'‚îî –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π: {tariff.count_days}\n'
            f'‚îî –°—Å—ã–ª–∫–∞ –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É: ....'
        )